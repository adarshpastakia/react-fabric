(self.webpackChunkreact_fabric=self.webpackChunkreact_fabric||[]).push([[9771],{"./packages/form/stories/autoComplete/AutoComplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Multiple:()=>Multiple,WithHistory:()=>WithHistory,_AutoComplete:()=>_AutoComplete,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/core/dist/esm/index.js"),_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/utilities/dist/esm/index.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_src__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/form/src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_src__WEBPACK_IMPORTED_MODULE_4__.j9,title:"@form/AutoComplete",parameters:{layout:"centered",jest:["form/tests/AutoComplete.test.tsx"]},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"max-w-[32rem] w-screen",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})})]},_AutoComplete={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_4__.j9,{...args,multiple:!1}),args:{label:"AutoComplete",placeholder:"AutoComplete...",allowClear:!0,onEnterPressed:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.fn)(),onChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.fn)(),history:["anchor","tester","arkwright"]}},Multiple={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_4__.j9,{...args,multiple:!0}),args:{label:"AutoComplete",placeholder:"AutoComplete...",allowClear:!0,onEnterPressed:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.fn)(),onChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.fn)(),history:["anchor","tester","arkwright","granville","lister","smeghead","kryten"]}},WithHistory={render:args=>{const[history,setHistory]=(0,_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Mj)("autocomplete:history",args.history??[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_4__.j9,{...args,multiple:!0,history,onSelect:(values=[])=>{setHistory((0,_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__.Qq)([values,...history].flat()).slice(0,50))}})},args:{label:"AutoComplete",placeholder:"AutoComplete...",allowClear:!0,onEnterPressed:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.fn)(),onChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.fn)(),history:["anchor","tester","arkwright","granville","lister","smeghead","kryten"]}},__namedExportsOrder=["_AutoComplete","Multiple","WithHistory"];_AutoComplete.parameters={..._AutoComplete.parameters,docs:{..._AutoComplete.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return <AutoComplete {...args} multiple={false} />;\n  },\n  args: {\n    label: "AutoComplete",\n    placeholder: "AutoComplete...",\n    allowClear: true,\n    onEnterPressed: fn(),\n    // @ts-expect-error ignore\n    onChange: fn(),\n    history: ["anchor", "tester", "arkwright"]\n  }\n}',..._AutoComplete.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return <AutoComplete {...args} multiple />;\n  },\n  args: {\n    label: "AutoComplete",\n    placeholder: "AutoComplete...",\n    allowClear: true,\n    onEnterPressed: fn(),\n    // @ts-expect-error ignore\n    onChange: fn(),\n    history: ["anchor", "tester", "arkwright", "granville", "lister", "smeghead", "kryten"]\n  }\n}',...Multiple.parameters?.docs?.source}}},WithHistory.parameters={...WithHistory.parameters,docs:{...WithHistory.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const [history, setHistory] = useLocalStorage<string[]>("autocomplete:history", args.history ?? []);\n    const updateHistory = (values: string[] = []) => {\n      setHistory(dedupe([values, ...history].flat()).slice(0, 50));\n    };\n    return <AutoComplete {...args} multiple history={history} onSelect={updateHistory} />;\n  },\n  args: {\n    label: "AutoComplete",\n    placeholder: "AutoComplete...",\n    allowClear: true,\n    onEnterPressed: fn(),\n    // @ts-expect-error ignore\n    onChange: fn(),\n    history: ["anchor", "tester", "arkwright", "granville", "lister", "smeghead", "kryten"]\n  }\n}',...WithHistory.parameters?.docs?.source}}}},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);