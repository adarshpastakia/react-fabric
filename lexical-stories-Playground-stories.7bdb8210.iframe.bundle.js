"use strict";(self.webpackChunkreact_fabric=self.webpackChunkreact_fabric||[]).push([[2985],{"./packages/lexical/stories/Playground.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Playground:()=>Playground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Playground_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),LexicalCode_prod=__webpack_require__("./node_modules/@lexical/code/LexicalCode.prod.mjs"),LexicalList_prod=__webpack_require__("./node_modules/@lexical/list/LexicalList.prod.mjs"),LexicalAutoFocusPlugin_prod=__webpack_require__("./node_modules/@lexical/react/LexicalAutoFocusPlugin.prod.mjs"),LexicalCheckListPlugin_prod=__webpack_require__("./node_modules/@lexical/react/LexicalCheckListPlugin.prod.mjs"),LexicalComposer_prod=__webpack_require__("./node_modules/@lexical/react/LexicalComposer.prod.mjs"),LexicalContentEditable_prod=__webpack_require__("./node_modules/@lexical/react/LexicalContentEditable.prod.mjs"),LexicalErrorBoundary_prod=__webpack_require__("./node_modules/@lexical/react/LexicalErrorBoundary.prod.mjs"),LexicalHistoryPlugin_prod=__webpack_require__("./node_modules/@lexical/react/LexicalHistoryPlugin.prod.mjs"),LexicalListPlugin_prod=__webpack_require__("./node_modules/@lexical/react/LexicalListPlugin.prod.mjs"),LexicalRichTextPlugin_prod=__webpack_require__("./node_modules/@lexical/react/LexicalRichTextPlugin.prod.mjs"),LexicalTablePlugin_prod=__webpack_require__("./node_modules/@lexical/react/LexicalTablePlugin.prod.mjs"),LexicalRichText_prod=__webpack_require__("./node_modules/@lexical/rich-text/LexicalRichText.prod.mjs"),LexicalTable_prod=__webpack_require__("./node_modules/@lexical/table/LexicalTable.prod.mjs"),esm=__webpack_require__("./packages/core/dist/esm/index.js"),dist_esm=__webpack_require__("./packages/utilities/dist/esm/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),StickyNode=__webpack_require__("./packages/lexical/src/nodes/StickyNode.tsx"),LexicalComposerContext_prod=__webpack_require__("./node_modules/@lexical/react/LexicalComposerContext.prod.mjs"),LexicalUtils_prod=__webpack_require__("./node_modules/@lexical/utils/LexicalUtils.prod.mjs"),Lexical_prod=__webpack_require__("./node_modules/lexical/Lexical.prod.mjs"),react_dom=__webpack_require__("./node_modules/react-dom/index.js");function isHTMLElement(x){return x instanceof HTMLElement}class Point{constructor(x,y){this._x=x,this._y=y}get x(){return this._x}get y(){return this._y}equals({x,y}){return this.x===x&&this.y===y}calcDeltaXTo({x}){return this.x-x}calcDeltaYTo({y}){return this.y-y}calcHorizontalDistanceTo(point){return Math.abs(this.calcDeltaXTo(point))}calcVerticalDistance(point){return Math.abs(this.calcDeltaYTo(point))}calcDistanceTo(point){return Math.sqrt(Math.pow(this.calcDeltaXTo(point),2)+Math.pow(this.calcDeltaYTo(point),2))}}class Rect{constructor(left,top,right,bottom){const[physicTop,physicBottom]=top<=bottom?[top,bottom]:[bottom,top],[physicLeft,physicRight]=left<=right?[left,right]:[right,left];this._top=physicTop,this._right=physicRight,this._left=physicLeft,this._bottom=physicBottom}get top(){return this._top}get right(){return this._right}get bottom(){return this._bottom}get left(){return this._left}get width(){return Math.abs(this._left-this._right)}get height(){return Math.abs(this._bottom-this._top)}equals({top,left,bottom,right}){return top===this._top&&bottom===this._bottom&&left===this._left&&right===this._right}contains(target){if(function isPoint(x){return x instanceof Point}(target)){const{x,y}=target,isOnTopSide=y<this._top,isOnBottomSide=y>this._bottom,isOnLeftSide=x<this._left,isOnRightSide=x>this._right;return{reason:{isOnBottomSide,isOnLeftSide,isOnRightSide,isOnTopSide},result:!(isOnTopSide||isOnBottomSide||isOnLeftSide||isOnRightSide)}}{const{top,left,bottom,right}=target;return top>=this._top&&top<=this._bottom&&bottom>=this._top&&bottom<=this._bottom&&left>=this._left&&left<=this._right&&right>=this._left&&right<=this._right}}intersectsWith(rect){const{left:x1,top:y1,width:w1,height:h1}=rect,{left:x2,top:y2,width:w2,height:h2}=this;return(x1+w1>=x2+w2?x1+w1:x2+w2)-(x1<=x2?x1:x2)<=w1+w2&&(y1+h1>=y2+h2?y1+h1:y2+h2)-(y1<=y2?y1:y2)<=h1+h2}generateNewRect({left=this.left,top=this.top,right=this.right,bottom=this.bottom}){return new Rect(left,top,right,bottom)}static fromLTRB(left,top,right,bottom){return new Rect(left,top,right,bottom)}static fromLWTH(left,width,top,height){return new Rect(left,top,left+width,top+height)}static fromPoints(startPoint,endPoint){const{y:top,x:left}=startPoint,{y:bottom,x:right}=endPoint;return Rect.fromLTRB(left,top,right,bottom)}static fromDOM(dom){const{top,width,left,height}=dom.getBoundingClientRect();return Rect.fromLWTH(left,width,top,height)}}const SPACE=4,TARGET_LINE_HALF_HEIGHT=2,DRAGGABLE_BLOCK_MENU_CLASSNAME="draggable-block-menu",TEXT_BOX_HORIZONTAL_PADDING=28,Downward=1,Upward=-1,Indeterminate=0;let prevIndex=1/0;function getBlockElement(anchorElem,editor,event){const anchorElementRect=anchorElem.getBoundingClientRect(),topLevelNodeKeys=function getTopLevelNodeKeys(editor){return editor.getEditorState().read((()=>(0,Lexical_prod.Ni)().getChildrenKeys()))}(editor);let blockElem=null;return editor.getEditorState().read((()=>{let index=function getCurrentIndex(keysLength){return 0===keysLength?1/0:prevIndex>=0&&prevIndex<keysLength?prevIndex:Math.floor(keysLength/2)}(topLevelNodeKeys.length),direction=Indeterminate;for(;index>=0&&index<topLevelNodeKeys.length;){const key=topLevelNodeKeys[index],elem=editor.getElementByKey(key);if(null===elem)break;const point=new Point(event.x,event.y),domRect=Rect.fromDOM(elem),{marginTop,marginBottom}=window.getComputedStyle(elem),rect=domRect.generateNewRect({bottom:domRect.bottom+parseFloat(marginBottom),left:anchorElementRect.left,right:anchorElementRect.right,top:domRect.top-parseFloat(marginTop)}),{result,reason:{isOnTopSide,isOnBottomSide}}=rect.contains(point);if(result){blockElem=elem,prevIndex=index;break}direction===Indeterminate&&(direction=isOnTopSide?Upward:isOnBottomSide?Downward:1/0),index+=direction}})),blockElem}function useDraggableBlockMenu(editor,anchorElem,isEditable){const scrollerElem=anchorElem.parentElement,menuRef=(0,react.useRef)(null),targetLineRef=(0,react.useRef)(null),isDraggingBlockRef=(0,react.useRef)(!1),[draggableBlockElem,setDraggableBlockElem]=(0,react.useState)(null);return(0,react.useEffect)((()=>{function onMouseMove(event){const target=event.target;if(!isHTMLElement(target))return void setDraggableBlockElem(null);if(target&&function isOnMenu(element){return!!element.closest(`.${DRAGGABLE_BLOCK_MENU_CLASSNAME}`)}(target))return;const _draggableBlockElem=getBlockElement(anchorElem,editor,event);setDraggableBlockElem(_draggableBlockElem)}function onMouseLeave(){setDraggableBlockElem(null)}return scrollerElem?.addEventListener("mousemove",onMouseMove),scrollerElem?.addEventListener("mouseleave",onMouseLeave),()=>{scrollerElem?.removeEventListener("mousemove",onMouseMove),scrollerElem?.removeEventListener("mouseleave",onMouseLeave)}}),[scrollerElem,anchorElem,editor]),(0,react.useEffect)((()=>{menuRef.current&&function setMenuPosition(targetElem,floatingElem,anchorElem){if(!targetElem)return floatingElem.style.opacity="0",void(floatingElem.style.transform="translate(-10000px, -10000px)");const scrollTop=targetElem.closest(".lexical-scroller")?.scrollTop??0,targetRect=targetElem.getBoundingClientRect(),targetStyle=window.getComputedStyle(targetElem),floatingElemRect=floatingElem.getBoundingClientRect(),anchorElementRect=anchorElem.getBoundingClientRect(),top=scrollTop+targetRect.top+(parseInt(targetStyle.lineHeight,10)-floatingElemRect.height)/2-anchorElementRect.top,left=SPACE;floatingElem.style.opacity="1",floatingElem.style.transform=`translate(${left}px, ${top}px)`}(draggableBlockElem,menuRef.current,anchorElem)}),[anchorElem,draggableBlockElem]),(0,react.useEffect)((()=>{function onDragover(event){if(!isDraggingBlockRef.current)return!1;const[isFileTransfer]=(0,LexicalRichText_prod.gA)(event);if(isFileTransfer)return!1;const{pageY,target}=event;if(!isHTMLElement(target))return!1;const targetBlockElem=getBlockElement(anchorElem,editor,event),targetLineElem=targetLineRef.current;return null!==targetBlockElem&&null!==targetLineElem&&(function setTargetLine(targetLineElem,targetBlockElem,mouseY,anchorElem){const targetStyle=window.getComputedStyle(targetBlockElem),{top:targetBlockElemTop,height:targetBlockElemHeight}=targetBlockElem.getBoundingClientRect(),{top:anchorTop,width:anchorWidth}=anchorElem.getBoundingClientRect(),scrollTop=targetBlockElem.closest(".editor-container")?.scrollTop??0;let lineTop=targetBlockElemTop;mouseY-targetBlockElemTop>targetBlockElemHeight/2?lineTop+=targetBlockElemHeight+parseFloat(targetStyle.marginBottom):lineTop-=parseFloat(targetStyle.marginTop);const top=lineTop-anchorTop-TARGET_LINE_HALF_HEIGHT+scrollTop,left=TEXT_BOX_HORIZONTAL_PADDING-SPACE;targetLineElem.style.transform=`translate(${left}px, ${top}px)`,targetLineElem.style.width=anchorWidth-2*(TEXT_BOX_HORIZONTAL_PADDING-SPACE)+"px",targetLineElem.style.opacity=".4"}(targetLineElem,targetBlockElem,pageY,anchorElem),event.preventDefault(),!0)}return(0,LexicalUtils_prod.Sd)(editor.registerCommand(Lexical_prod.ri,(event=>onDragover(event)),Lexical_prod.Ac),editor.registerCommand(Lexical_prod.Sr,(event=>function onDrop(event){if(!isDraggingBlockRef.current)return!1;const[isFileTransfer]=(0,LexicalRichText_prod.gA)(event);if(isFileTransfer)return!1;const{target,dataTransfer,pageY}=event,dragData=dataTransfer?.getData("application/x-lexical-drag-block")??"",draggedNode=(0,Lexical_prod.ns)(dragData);if(!draggedNode)return!1;if(!isHTMLElement(target))return!1;const targetBlockElem=getBlockElement(anchorElem,editor,event);if(!targetBlockElem)return!1;const targetNode=(0,Lexical_prod.xL)(targetBlockElem);if(!targetNode)return!1;if(targetNode===draggedNode)return!0;const{top,height}=targetBlockElem.getBoundingClientRect();return pageY-top>height/2||targetBlockElem.classList.contains("editor-cover-page")?targetNode.insertAfter(draggedNode):targetNode.insertBefore(draggedNode),setDraggableBlockElem(null),!0}(event)),Lexical_prod.Wg))}),[anchorElem,editor]),draggableBlockElem?.classList?.contains("editor-cover-page")?(0,jsx_runtime.jsx)("div",{}):(0,react_dom.createPortal)((0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:"rounded px-0.5 py-px select-none cursor-grab opacity-0 absolute left-0 top-0 will-change-transform active:cursor-grabbing hover:bg-base",ref:menuRef,draggable:!0,onDragStart:function onDragStart(event){const dataTransfer=event.dataTransfer;if(!dataTransfer||!draggableBlockElem)return;!function setDragImage(dataTransfer,draggableBlockElem){const{transform}=draggableBlockElem.style;draggableBlockElem.style.transform="translateZ(0)",dataTransfer.setDragImage(draggableBlockElem,0,0),setTimeout((()=>{draggableBlockElem.style.transform=transform}))}(dataTransfer,draggableBlockElem);let nodeKey="";editor.update((()=>{const node=(0,Lexical_prod.xL)(draggableBlockElem);node&&(nodeKey=node.getKey())})),isDraggingBlockRef.current=!0,dataTransfer.setData("application/x-lexical-drag-block",nodeKey)},onDragEnd:function onDragEnd(){isDraggingBlockRef.current=!1,function hideTargetLine(targetLineElem){targetLineElem&&(targetLineElem.style.opacity="0",targetLineElem.style.transform="translate(-10000px, -10000px)")}(targetLineRef.current)},children:(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",className:"w-4 h-4 opacity-30 pointer-events-none",children:[(0,jsx_runtime.jsx)("title",{children:"dots-grid"}),(0,jsx_runtime.jsx)("path",{d:"M12 16C13.1 16 14 16.9 14 18S13.1 20 12 20 10 19.1 10 18 10.9 16 12 16M12 10C13.1 10 14 10.9 14 12S13.1 14 12 14 10 13.1 10 12 10.9 10 12 10M12 4C13.1 4 14 4.9 14 6S13.1 8 12 8 10 7.1 10 6 10.9 4 12 4M6 16C7.1 16 8 16.9 8 18S7.1 20 6 20 4 19.1 4 18 4.9 16 6 16M6 10C7.1 10 8 10.9 8 12S7.1 14 6 14 4 13.1 4 12 4.9 10 6 10M6 4C7.1 4 8 4.9 8 6S7.1 8 6 8 4 7.1 4 6 4.9 4 6 4M18 16C19.1 16 20 16.9 20 18S19.1 20 18 20 16 19.1 16 18 16.9 16 18 16M18 10C19.1 10 20 10.9 20 12S19.1 14 18 14 16 13.1 16 12 16.9 10 18 10M18 4C19.1 4 20 4.9 20 6S19.1 8 18 8 16 7.1 16 6 16.9 4 18 4Z"})]})}),(0,jsx_runtime.jsx)("div",{className:"pointer-events-none bg-primary h-1 absolute top-0 left-0 opacity-0 will-change-transform",ref:targetLineRef})]}),anchorElem)}const DraggableBlockPlugin=({anchorElem=document.body})=>{const[editor]=(0,LexicalComposerContext_prod.DF)();return useDraggableBlockMenu(editor,anchorElem,editor._editable)};try{DraggableBlockPlugin.displayName="DraggableBlockPlugin",DraggableBlockPlugin.__docgenInfo={description:"",displayName:"DraggableBlockPlugin",props:{anchorElem:{defaultValue:{value:"document.body"},description:"",name:"anchorElem",required:!1,type:{name:"HTMLElement"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/lexical/src/plugins/DraggableBlockPlugin.tsx#DraggableBlockPlugin"]={docgenInfo:DraggableBlockPlugin.__docgenInfo,name:"DraggableBlockPlugin",path:"packages/lexical/src/plugins/DraggableBlockPlugin.tsx#DraggableBlockPlugin"})}catch(__react_docgen_typescript_loader_error){}const StickyPlugin=()=>{const[editor]=(0,LexicalComposerContext_prod.DF)();return(0,react.useEffect)((()=>{if(!editor.hasNodes([StickyNode.OF]))throw new Error("StickyPlugin: StickyNode not registered on editor")}),[editor]),null};var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),Lexical_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].use[2]!./packages/lexical/src/editor/Lexical.module.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(Lexical_module.A,options);const editor_Lexical_module=Lexical_module.A&&Lexical_module.A.locals?Lexical_module.A.locals:void 0,LexicalTheme={ltr:"ltr",rtl:"rtl",paragraph:"editor-paragraph",quote:"editor-quote",heading:{h1:"editor-heading-h1",h2:"editor-heading-h2",h3:"editor-heading-h3",h4:"editor-heading-h4",h5:"editor-heading-h5",h6:"editor-heading-h6"},list:{nested:{listitem:"editor-nested-listitem"},ol:"editor-list-ol",ul:"editor-list-ul",listitem:"editor-listItem",listitemChecked:"editor-listItemChecked",listitemUnchecked:"editor-listItemUnchecked"},hashtag:"editor-hashtag",image:"editor-image",link:"editor-link",text:{bold:"editor-textBold",code:"editor-textCode",italic:"editor-textItalic",strikethrough:"editor-textStrikethrough",subscript:"editor-textSubscript",superscript:"editor-textSuperscript",underline:"editor-textUnderline",underlineStrikethrough:"editor-textUnderlineStrikethrough"},code:"editor-code",codeHighlight:{atrule:"editor-tokenAttr",attr:"editor-tokenAttr",boolean:"editor-tokenProperty",builtin:"editor-tokenSelector",cdata:"editor-tokenComment",char:"editor-tokenSelector",class:"editor-tokenFunction","class-name":"editor-tokenFunction",comment:"editor-tokenComment",constant:"editor-tokenProperty",deleted:"editor-tokenProperty",doctype:"editor-tokenComment",entity:"editor-tokenOperator",function:"editor-tokenFunction",important:"editor-tokenVariable",inserted:"editor-tokenSelector",keyword:"editor-tokenAttr",namespace:"editor-tokenVariable",number:"editor-tokenProperty",operator:"editor-tokenOperator",prolog:"editor-tokenComment",property:"editor-tokenProperty",punctuation:"editor-tokenPunctuation",regex:"editor-tokenVariable",selector:"editor-tokenSelector",string:"editor-tokenSelector",symbol:"editor-tokenProperty",tag:"editor-tokenProperty",url:"editor-tokenOperator",variable:"editor-tokenVariable"}};var form_dist_esm=__webpack_require__("./packages/form/dist/esm/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js"),LexicalLink_prod=__webpack_require__("./node_modules/@lexical/link/LexicalLink.prod.mjs"),LexicalSelection_prod=__webpack_require__("./node_modules/@lexical/selection/LexicalSelection.prod.mjs");const blockTypeToBlockName={bullet:"Bulleted List",check:"Check List",code:"Code Block",h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",h4:"Heading 4",h5:"Heading 5",h6:"Heading 6",number:"Numbered List",paragraph:"Normal",quote:"Quote"};const useFormatWatcher=()=>{const[,startTransition]=(0,react.useTransition)(),[editor]=(0,LexicalComposerContext_prod.DF)(),[activeEditor,setActiveEditor]=(0,react.useState)(editor),[currentSelection,setCurrentSelection]=(0,react.useState)(),[blockType,setBlockType]=(0,react.useState)("paragraph"),[rootType,setRootType]=(0,react.useState)("root"),[selectedElementKey,setSelectedElementKey]=(0,react.useState)(null),[fontSize,setFontSize]=(0,react.useState)("16"),[fontColor,setFontColor]=(0,react.useState)("#000"),[bgColor,setBgColor]=(0,react.useState)("#fff"),[fontFamily,setFontFamily]=(0,react.useState)("Arial"),[isLink,setIsLink]=(0,react.useState)(!1),[isBold,setIsBold]=(0,react.useState)(!1),[isItalic,setIsItalic]=(0,react.useState)(!1),[isUnderline,setIsUnderline]=(0,react.useState)(!1),[isStrikethrough,setIsStrikethrough]=(0,react.useState)(!1),[isSubscript,setIsSubscript]=(0,react.useState)(!1),[isSuperscript,setIsSuperscript]=(0,react.useState)(!1),[isCode,setIsCode]=(0,react.useState)(!1),[canUndo,setCanUndo]=(0,react.useState)(!1),[canRedo,setCanRedo]=(0,react.useState)(!1),[isRTL,setIsRTL]=(0,react.useState)(!1),[codeLanguage,setCodeLanguage]=(0,react.useState)(""),[isEditable,setIsEditable]=(0,react.useState)((()=>editor.isEditable())),$updateToolbar=(0,react.useCallback)((()=>{const selection=(0,Lexical_prod.vJ)();if((0,Lexical_prod.I2)(selection)){const anchorNode=selection.anchor.getNode();let element="root"===anchorNode.getKey()?anchorNode:(0,LexicalUtils_prod.Bt)(anchorNode,(e=>{const parent=e.getParent();return null!==parent&&(0,Lexical_prod.Iq)(parent)}));null===element&&(element=anchorNode.getTopLevelElementOrThrow());const elementKey=element.getKey(),elementDOM=activeEditor.getElementByKey(elementKey);setIsBold(selection.hasFormat("bold")),setIsItalic(selection.hasFormat("italic")),setIsUnderline(selection.hasFormat("underline")),setIsStrikethrough(selection.hasFormat("strikethrough")),setIsSubscript(selection.hasFormat("subscript")),setIsSuperscript(selection.hasFormat("superscript")),setIsCode(selection.hasFormat("code")),setIsRTL((0,LexicalSelection_prod.LP)(selection));const node=function getSelectedNode(selection){const anchor=selection.anchor,focus=selection.focus,anchorNode=selection.anchor.getNode(),focusNode=selection.focus.getNode();return anchorNode===focusNode?anchorNode:selection.isBackward()?(0,LexicalSelection_prod.Nx)(focus)?anchorNode:focusNode:(0,LexicalSelection_prod.Nx)(anchor)?anchorNode:focusNode}(selection),parent=node.getParent();(0,LexicalLink_prod.FJ)(parent)||(0,LexicalLink_prod.FJ)(node)?setIsLink(!0):setIsLink(!1);const tableNode=(0,LexicalUtils_prod.Bt)(node,LexicalTable_prod.TX);if((0,LexicalTable_prod.TX)(tableNode)?setRootType("table"):setRootType("root"),null!==elementDOM)if(setSelectedElementKey(elementKey),(0,LexicalList_prod.HY)(element)){const parentList=(0,LexicalUtils_prod.eu)(anchorNode,LexicalList_prod.v5),type=parentList?parentList.getListType():element.getListType();setBlockType(type)}else{const type=(0,LexicalRichText_prod.Pi)(element)?element.getTag():element.getType();if(type in blockTypeToBlockName&&setBlockType(type),(0,LexicalCode_prod.a5)(element)){const language=element.getLanguage();return void setCodeLanguage(language?LexicalCode_prod.SD[language]||language:"")}}setFontSize(parseInt((0,LexicalSelection_prod.$S)(selection,"font-size","16"))+""),setFontColor((0,LexicalSelection_prod.$S)(selection,"color",new String("#000"))),setBgColor((0,LexicalSelection_prod.$S)(selection,"background-color",new String("#fff"))),setFontFamily((0,LexicalSelection_prod.$S)(selection,"font-family","inherit"))}}),[]);(0,react.useEffect)((()=>editor.registerCommand(Lexical_prod.Mv,((_payload,newEditor)=>(setActiveEditor(newEditor),setCurrentSelection((0,Lexical_prod.vJ)()),$updateToolbar(),!1)),Lexical_prod.d)),[editor,$updateToolbar]),(0,react.useEffect)((()=>{activeEditor.getEditorState().read((()=>{$updateToolbar()}))}),[activeEditor,$updateToolbar]),(0,react.useEffect)((()=>(0,LexicalUtils_prod.Sd)(editor.registerEditableListener((editable=>{setIsEditable(editable)})),activeEditor.registerUpdateListener((({editorState})=>{editorState.read((()=>{$updateToolbar()}))})),activeEditor.registerCommand(Lexical_prod.Kf,(payload=>(setCanUndo(payload),!1)),Lexical_prod.d),activeEditor.registerCommand(Lexical_prod.WW,(payload=>(setCanRedo(payload),!1)),Lexical_prod.d))),[$updateToolbar,activeEditor,editor]);const applyStyleText=(0,react.useCallback)((styles=>{activeEditor.update((()=>{(0,dist_esm.gD)(currentSelection)||(0,LexicalSelection_prod.BJ)(currentSelection,styles)}))}),[activeEditor,currentSelection]),formatNormal=(0,react.useCallback)((()=>{setTimeout((()=>{activeEditor.update((()=>{const selection=(0,Lexical_prod.vJ)();(0,Lexical_prod.I2)(selection)&&(0,LexicalSelection_prod.zI)(selection,(()=>(0,Lexical_prod.lJ)()))}))}),100)}),[activeEditor,blockType]),formatQuote=(0,react.useCallback)((()=>{"quote"!==blockType&&setTimeout((()=>{activeEditor.update((()=>{const selection=(0,Lexical_prod.vJ)();(0,Lexical_prod.I2)(selection)&&(0,LexicalSelection_prod.zI)(selection,(()=>(0,LexicalRichText_prod.xi)()))}))}),100)}),[activeEditor,blockType]),formatBlock=(0,react.useCallback)((()=>{"code"!==blockType&&setTimeout((()=>{activeEditor.update((()=>{const selection=(0,Lexical_prod.vJ)();(0,Lexical_prod.I2)(selection)&&(0,LexicalSelection_prod.zI)(selection,(()=>(0,LexicalCode_prod.QC)()))}))}),100)}),[activeEditor,blockType]),formatHeading=(0,react.useCallback)((headingSize=>{blockType!==headingSize&&setTimeout((()=>{activeEditor.update((()=>{const selection=(0,Lexical_prod.vJ)();(0,Lexical_prod.I2)(selection)&&(0,LexicalSelection_prod.zI)(selection,(()=>(0,LexicalRichText_prod.fi)(headingSize)))}))}),100)}),[activeEditor,blockType]),indent=(0,react.useCallback)((()=>{activeEditor.dispatchCommand(Lexical_prod.Pi,void 0)}),[activeEditor]),outdent=(0,react.useCallback)((()=>{activeEditor.dispatchCommand(Lexical_prod.si,void 0)}),[activeEditor]),clearFormatting=(0,react.useCallback)((()=>{activeEditor.update((()=>{const selection=(0,Lexical_prod.vJ)();if((0,Lexical_prod.I2)(selection)){const anchor=selection.anchor,focus=selection.focus,nodes=selection.getNodes();if(anchor.key===focus.key&&anchor.offset===focus.offset)return;setFontSize("16"),setBgColor("#fff"),setFontColor("#000"),nodes.forEach(((node,idx)=>{(0,Lexical_prod.kF)(node)?(0===idx&&0!==anchor.offset&&(node=node.splitText(anchor.offset)[1]||node),idx===nodes.length-1&&(0,Lexical_prod.kF)(node)&&(node=node.splitText(focus.offset)[0]||node),(0,Lexical_prod.kF)(node)&&(""!==node.__style&&node.setStyle(""),0!==node.__format&&(node.setFormat(0),(0,LexicalUtils_prod.mB)(node).setFormat("")))):((0,LexicalRichText_prod.Pi)(node)||(0,LexicalRichText_prod.jd)(node))&&node.replace((0,Lexical_prod.lJ)(),!0)}))}}))}),[activeEditor]),onSizeChange=(0,react.useCallback)((value=>{startTransition((()=>setFontColor(value))),applyStyleText({"font-size":+value+"px"})}),[applyStyleText]),onFontColorSelect=(0,react.useCallback)(((value="#000000")=>{applyStyleText({color:value})}),[applyStyleText]),onBgColorSelect=(0,react.useCallback)(((value="#ffffff")=>{applyStyleText({"background-color":value})}),[applyStyleText]);return window.$getSelection=async()=>await new Promise((resolve=>{activeEditor.update((()=>{const selection=(0,Lexical_prod.vJ)();resolve(selection)}))})),{editor,blockType,rootType,selectedElementKey,fontSize,fontColor,bgColor,fontFamily,isLink,isBold,isItalic,isUnderline,isStrikethrough,isSubscript,isSuperscript,isCode,canUndo,canRedo,isRTL,isEditable,codeLanguage,activeEditor,indent,outdent,clearFormatting,onFontColorSelect,onBgColorSelect,formatQuote,onSizeChange,formatBlock,formatNormal,formatHeading,formatBulletList:()=>{setTimeout((()=>{"bullet"!==blockType?editor.dispatchCommand(LexicalList_prod.q7,void 0):editor.dispatchCommand(LexicalList_prod.uS,void 0)}),100)},formatCheckList:()=>{setTimeout((()=>{"check"!==blockType?editor.dispatchCommand(LexicalList_prod.mJ,void 0):editor.dispatchCommand(LexicalList_prod.uS,void 0)}),100)},formatNumberedList:()=>{setTimeout((()=>{"number"!==blockType?editor.dispatchCommand(LexicalList_prod.x,void 0):editor.dispatchCommand(LexicalList_prod.uS,void 0)}),100)}}},ToolbarPlugin_blockTypeToBlockName={bullet:"Bulleted List",code:"Block",h1:"Heading",h2:"Sub Heading",h6:"Comment",number:"Numbered List",paragraph:"Normal",quote:"Quote"},blockTypeToBlockIcon={bullet:esm.OO.formatListBullet,code:esm.OO.formatCodeBlock,h1:" ",h2:" ",paragraph:"",h6:esm.OO.formatCommentBlock,number:esm.OO.formatListNumber,quote:esm.OO.formatQuoteBlock},SIZES=Object.freeze(["8","9","10","11","12","13","14","16","18","20","24","28","32","36","48","64","72"]),ButtonWrapper=({label,...rest})=>(0,jsx_runtime.jsx)(esm.m_,{content:label,children:(0,jsx_runtime.jsx)(esm.$n,{"aria-label":label,tabIndex:-1,variant:"link",...rest})}),ToolbarPlugin=()=>{const watch=useFormatWatcher(),{t}=(0,es.Bd)("lexical"),textFormat=(0,react.useMemo)((()=>{const ret=[];return watch.isBold&&ret.push("bold"),watch.isItalic&&ret.push("italic"),watch.isUnderline&&ret.push("underline"),ret}),[watch]);return(0,jsx_runtime.jsxs)("div",{className:"border-b flex px-1 py-px",children:[(0,jsx_runtime.jsxs)(esm.ms,{children:[(0,jsx_runtime.jsx)(esm.$n,{variant:"link",tabIndex:-1,altIcon:esm.OO.caretDown,icon:blockTypeToBlockIcon[watch.blockType],children:ToolbarPlugin_blockTypeToBlockName[watch.blockType]}),(0,jsx_runtime.jsxs)(esm.W1,{children:[(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.h1,label:ToolbarPlugin_blockTypeToBlockName.h1,onClick:()=>watch.formatHeading("h1")}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.h2,label:ToolbarPlugin_blockTypeToBlockName.h2,onClick:()=>watch.formatHeading("h2")}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.paragraph,label:ToolbarPlugin_blockTypeToBlockName.paragraph,onClick:watch.formatNormal}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.quote,label:ToolbarPlugin_blockTypeToBlockName.quote,onClick:watch.formatQuote}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.code,label:ToolbarPlugin_blockTypeToBlockName.code,onClick:watch.formatBlock}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.h6,label:ToolbarPlugin_blockTypeToBlockName.h6,onClick:()=>watch.formatHeading("h6")}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.bullet,label:ToolbarPlugin_blockTypeToBlockName.bullet,onClick:watch.formatBulletList}),(0,jsx_runtime.jsx)(esm.Dr,{icon:blockTypeToBlockIcon.number,label:ToolbarPlugin_blockTypeToBlockName.number,onClick:watch.formatNumberedList})]})]}),(0,jsx_runtime.jsx)(esm.cG,{vertical:!0}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(esm.ms,{children:[(0,jsx_runtime.jsx)(esm.$n,{variant:"link",altIcon:esm.OO.caretDown,children:(0,dist_esm._W)(watch.fontSize+"","16")}),(0,jsx_runtime.jsx)(esm.W1,{className:"hide-icons",children:SIZES.map((size=>(0,jsx_runtime.jsx)(esm.Dr,{label:size,active:watch.fontSize===size,onClick:()=>watch.onSizeChange(size)},size)))})]})}),(0,jsx_runtime.jsx)(esm.cG,{vertical:!0}),(0,jsx_runtime.jsxs)(esm.e2,{variant:"link",children:[(0,jsx_runtime.jsx)(ButtonWrapper,{value:"start",rtlFlip:!0,label:t("tool.alignStart"),icon:esm.OO.alignLeft,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.fU,"start")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"center",label:t("tool.alignCenter"),icon:esm.OO.alignCenter,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.fU,"center")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"end",rtlFlip:!0,label:t("tool.alignEnd"),icon:esm.OO.alignRight,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.fU,"end")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"justify",rtlFlip:!0,label:t("tool.alignJustify"),icon:esm.OO.alignJustify,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.fU,"justify")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"justify",rtlFlip:!0,label:t("tool.indentOut"),icon:esm.OO.formatIndentDecrease,onClick:()=>watch.outdent()}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"justify",rtlFlip:!0,label:t("tool.identIn"),icon:esm.OO.formatIndentIncrease,onClick:()=>watch.indent()})]}),(0,jsx_runtime.jsx)(esm.cG,{vertical:!0}),(0,jsx_runtime.jsxs)(esm.WK,{variant:"link",value:textFormat,children:[(0,jsx_runtime.jsx)(ButtonWrapper,{value:"bold",label:t("tool.bold"),icon:esm.OO.formatBold,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.mB,"bold")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"italic",label:t("tool.italic"),icon:esm.OO.formatItalic,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.mB,"italic")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"underline",label:t("tool.underline"),icon:esm.OO.formatUnderline,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.mB,"underline")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"strikethrough",label:t("tool.strikethrough"),icon:esm.OO.formatStrikethrough,onClick:()=>watch.activeEditor.dispatchCommand(Lexical_prod.mB,"strikethrough")})]}),(0,jsx_runtime.jsx)(esm.cG,{vertical:!0}),(0,jsx_runtime.jsx)(form_dist_esm.AN,{noOutline:!0,value:watch.fontColor,onChange:v=>watch.onFontColorSelect(v??void 0),decorateStart:(0,jsx_runtime.jsx)(esm.In,{icon:esm.OO.formatText})}),(0,jsx_runtime.jsx)(form_dist_esm.AN,{noOutline:!0,value:watch.bgColor,onChange:v=>watch.onBgColorSelect(v??void 0),decorateStart:(0,jsx_runtime.jsx)(esm.In,{icon:esm.OO.formatFill})}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"hilight",label:t("tool.hilight"),icon:esm.OO.formatHilight,onClick:()=>watch.onBgColorSelect("#fde68a")}),(0,jsx_runtime.jsx)(ButtonWrapper,{value:"hilight",label:t("tool.clear"),icon:esm.OO.formatClear,onClick:()=>watch.clearFormatting()}),(0,jsx_runtime.jsx)(esm.cG,{})]})},LexicalEditor=({value,readOnly,publishMode,onChange,onDirty})=>{const editorRef=(0,react.useRef)(),[editorContainer,setEditorContainer]=(0,react.useState)(null),onError=error=>{console.error("ERROR",error)},initEditor=(0,react.useCallback)((editor=>{editorRef.current=editor;const handler=(0,dist_esm.sg)((({editorState,dirtyElements,dirtyLeaves})=>{editorState.read((()=>{dirtyElements.size>0&&onDirty?.(!0),onChange?.(editorState.toJSON())}))}),500),handle=editor.registerUpdateListener(handler);return()=>{handle?.()}}),[]);(0,react.useEffect)((()=>{editorRef.current?.setEditorState(editorRef.current?.parseEditorState(value??""))}),[value]),(0,react.useEffect)((()=>{editorRef.current?.registerRootListener((rootElement=>{rootElement&&setTimeout((()=>rootElement.contentEditable=`${!readOnly&&!publishMode}`),100)}))}),[readOnly,publishMode]);const initialConfig=(0,react.useMemo)((()=>({editorState:initEditor,namespace:"MyEditor",editable:!readOnly&&!publishMode,theme:LexicalTheme,nodes:[LexicalRichText_prod.dJ,LexicalRichText_prod.jL,LexicalCode_prod.yy,LexicalCode_prod.iK,LexicalList_prod.YW,LexicalList_prod.v5,LexicalTable_prod.B9,LexicalTable_prod.HA,LexicalTable_prod.py,StickyNode.OF],onError})),[]),Wrapper=(0,react.useCallback)((({children})=>publishMode?children:(0,jsx_runtime.jsxs)("div",{className:"lexical-scroller area-content overflow-auto",children:[(0,jsx_runtime.jsx)("div",{className:classnames_default()(editor_Lexical_module.lexicalToolbar,"sticky top-0 z-1"),children:(0,jsx_runtime.jsx)(esm.Y9,{className:"bg-base",children:(0,jsx_runtime.jsx)(ToolbarPlugin,{})})}),children]})),[publishMode]);return(0,jsx_runtime.jsx)(esm.tH,{children:(0,jsx_runtime.jsx)(LexicalComposer_prod.n,{initialConfig,children:(0,jsx_runtime.jsx)(Wrapper,{children:(0,jsx_runtime.jsx)(esm.NP,{colorScheme:"light",children:(0,jsx_runtime.jsxs)("div",{role:"none",className:classnames_default()(editor_Lexical_module.lexicalEditor,"lexical-container relative bg-white min-h-full mx-auto shadow-md print:shadow-none"),onDragOver:e=>e.stopPropagation(),onKeyDown:e=>e.stopPropagation(),ref:setEditorContainer,children:[(0,jsx_runtime.jsx)(LexicalRichTextPlugin_prod.$,{contentEditable:(0,jsx_runtime.jsx)(LexicalContentEditable_prod.a,{className:"lexical-editor px-[2cm] py-[1cm] min-h-screen"}),placeholder:(0,jsx_runtime.jsx)("div",{className:"text-muted overflow-hidden absolute mt-6 top-[1cm] left-[2cm] select-none pointer-events-none",children:"Enter some text..."}),ErrorBoundary:LexicalErrorBoundary_prod.R}),(0,jsx_runtime.jsx)(LexicalListPlugin_prod.Q,{}),(0,jsx_runtime.jsx)(LexicalCheckListPlugin_prod.A,{}),(0,jsx_runtime.jsx)(LexicalTablePlugin_prod.A,{}),(0,jsx_runtime.jsx)(LexicalHistoryPlugin_prod.G,{}),(0,jsx_runtime.jsx)(StickyPlugin,{}),(0,jsx_runtime.jsx)(LexicalAutoFocusPlugin_prod.x,{defaultSelection:"rootStart"}),editorContainer&&(0,jsx_runtime.jsx)(DraggableBlockPlugin,{anchorElem:editorContainer})]})})})})})};try{LexicalEditor.displayName="LexicalEditor",LexicalEditor.__docgenInfo={description:"",displayName:"LexicalEditor",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},publishMode:{defaultValue:null,description:"publish mode removes all wrapping and renders plain lexical view for exporting to pdf using puppeteer",name:"publishMode",required:!1,type:{name:"boolean"}},header:{defaultValue:null,description:"",name:"header",required:!1,type:{name:"string"}},footer:{defaultValue:null,description:"",name:"footer",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: KeyValue) => void)"}},onDirty:{defaultValue:null,description:"",name:"onDirty",required:!1,type:{name:"((isDirty: boolean) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/lexical/src/editor/LexicalEditor.tsx#LexicalEditor"]={docgenInfo:LexicalEditor.__docgenInfo,name:"LexicalEditor",path:"packages/lexical/src/editor/LexicalEditor.tsx#LexicalEditor"})}catch(__react_docgen_typescript_loader_error){}const demo_namespaceObject=JSON.parse('{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Lexical Editor","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"heading","version":1,"tag":"h1"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Lexcial editor provides rich-text editing which can be used to generate rich pdf documents through puppeteer","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"quote","version":1},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"This module is built with ","type":"text","version":1},{"detail":0,"format":8,"mode":"normal","style":"background-color: #fc07","text":"@lexical/react","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":". Try typing in ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"some text","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":" with ","type":"text","version":1},{"detail":0,"format":2,"mode":"normal","style":"","text":"different","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":" formats.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent at bibendum lectus. Phasellus venenatis mauris mauris, id dignissim ipsum ultricies id. Cras ornare in mauris eu aliquet. Ut quis ante dictum, sagittis velit eu, porta nisl. Curabitur placerat tincidunt nisi. Curabitur consectetur urna urna, eu rhoncus justo mollis ac. Duis tincidunt libero eget ligula semper consequat. Pellentesque facilisis egestas dictum. Vivamus consequat condimentum malesuada. Aliquam ut pharetra tortor.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Donec in urna eget metus bibendum semper auctor sed leo. Morbi dui ex, posuere ac lectus non, maximus consectetur justo. Pellentesque nulla risus, blandit quis risus non, lobortis consequat sem. Phasellus nec pulvinar dui. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Proin pharetra nisi ornare elit elementum pharetra. Vivamus pharetra neque vitae sollicitudin aliquam. Aliquam non mi interdum dolor mollis volutpat. Nulla placerat ipsum vel mauris ultricies, non lacinia tellus scelerisque.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Ut quis lectus at eros eleifend condimentum. Nam a enim odio. Nunc libero nulla, commodo nec auctor vel, accumsan vitae lorem. Morbi interdum luctus dui ut finibus. Maecenas tincidunt at diam finibus lobortis. Vestibulum in felis vitae odio ultricies condimentum id at lacus. Proin ligula magna, malesuada at iaculis auctor, condimentum nec odio. Phasellus suscipit lectus nulla, a pharetra mi lacinia in. Donec facilisis urna ut viverra convallis. Phasellus laoreet, erat nec convallis vehicula, est arcu aliquam diam, eget laoreet purus augue commodo turpis. Maecenas scelerisque varius elit, in aliquet velit malesuada a. Sed malesuada vitae turpis in rutrum. Donec ut ipsum imperdiet, fringilla nisi et, facilisis ante. Aenean ac velit ut dui finibus venenatis vitae sit amet est. Nam finibus, orci et maximus fringilla, ex augue blandit enim, non maximus justo lectus in sapien. Nunc sodales tempor urna, ullamcorper posuere erat lacinia ut.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Quisque eu egestas tellus. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris eget hendrerit mauris, a tempor orci. In in consequat mauris. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Duis eu pharetra nibh. Praesent molestie elit at odio luctus, in laoreet eros egestas. Vestibulum ante velit, faucibus id volutpat a, ullamcorper sed risus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vivamus nec sem erat.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Sed euismod tortor sed rutrum fermentum. Mauris molestie auctor porttitor. Sed iaculis ante ac justo pretium varius. Aliquam bibendum nisi nisi, a iaculis turpis vehicula ultricies. Aenean egestas dignissim malesuada. Proin nec lectus vitae eros auctor fringilla. Nulla lacinia ut purus sed efficitur. In quis vehicula risus, non vestibulum ante.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'),Playground_stories={component:LexicalEditor,title:"@lexical/_Playground_",parameters:{layout:"fullscreen",controls:{exclude:"children"}}},Playground={render:args=>{const[lang,setLang]=(0,react.useState)("json");return(0,jsx_runtime.jsx)("div",{className:"min-h-[600px]",children:(0,jsx_runtime.jsx)(esm.LM,{children:(0,jsx_runtime.jsx)(LexicalEditor,{...args,value:demo_namespaceObject,onChange:(0,dist.XI)("onChange"),onDirty:(0,dist.XI)("onDirty")})})})},args:{}},__namedExportsOrder=["Playground"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const [lang, setLang] = useState<AnyObject>("json");\n    return <div className="min-h-[600px]">\n        <Viewport>\n          <LexicalEditor {...args} value={json} onChange={action("onChange")} onDirty={action("onDirty")} />\n        </Viewport>\n      </div>;\n  },\n  args: {}\n}',...Playground.parameters?.docs?.source}}}},"./packages/lexical/src/nodes/StickyNode.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{OF:()=>StickyNode,oL:()=>$isStickyNode});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),lexical__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lexical/Lexical.prod.mjs"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-dom/index.js");const StickyComponent=(0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)((async()=>await Promise.all([__webpack_require__.e(9165),__webpack_require__.e(3796)]).then(__webpack_require__.bind(__webpack_require__,"./packages/lexical/src/components/StickyComponent.tsx")).then((({StickyComponent})=>({default:StickyComponent}))))),convertStickyElement=domNode=>{if("true"===domNode.getAttribute("data-lexical-sticky")){return{node:$createStickyNode({xOffset:+(domNode.getAttribute("data-x")??"8"),yOffset:+(domNode.getAttribute("data-y")??"8"),user:domNode.getAttribute("data-user")??"",color:domNode.getAttribute("data-color"),state:domNode.getAttribute("data-state")??""})}}return null},colors={yellow:"green",green:"blue",blue:"pink",pink:"yellow"};class StickyNode extends lexical__WEBPACK_IMPORTED_MODULE_3__.Kp{static getType(){return"sticky"}static clone(node){return new StickyNode(node.__x,node.__y,node.__user,node.__color,node.__state,node.__key)}static importJSON(serializedNode){return new StickyNode(serializedNode.xOffset,serializedNode.yOffset,serializedNode.user,serializedNode.color,serializedNode.state)}static importDOM(){return{div:domNode=>domNode.hasAttribute("data-lexical-sticky")?{conversion:convertStickyElement,priority:2}:null,span:domNode=>domNode.hasAttribute("data-lexical-sticky")?{conversion:convertStickyElement,priority:1}:null}}constructor(x,y,user="",color="yellow",state,key){super(key),this.__x=x,this.__y=y,this.__user=user,this.__state=state,this.__color=color}exportJSON(){return{state:this.__state,color:this.__color,user:this.__user,type:"sticky",version:1,xOffset:this.__x,yOffset:this.__y}}createDOM(config){const div=document.createElement("div");return div.style.display="contents",div}updateDOM(){return!1}exportDOM(){const writable=this.getWritable(),element=document.createElement("div");return element.setAttribute("data-lexical-sticky","true"),element.setAttribute("data-x",`${writable.__x}`),element.setAttribute("data-y",`${writable.__y}`),element.setAttribute("data-user",`${writable.__user}`),element.setAttribute("data-color",`${writable.__color}`),element.setAttribute("data-state",`${writable.__state}`),{element}}setPosition(x,y){const writable=this.getWritable();writable.__x=x,writable.__y=y}toggleColor(){const writable=this.getWritable();writable.__color=colors[writable.__color??"yellow"]}updateState(text){this.getWritable().__state=text}decorate(editor,config){return(0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense,{fallback:null,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StickyComponent,{x:this.__x,y:this.__y,user:this.__user,state:this.__state,nodeKey:this.getKey(),color:this.__color})}),document.querySelector(".lexical-container")??document.body)}isIsolated(){return!0}}function $isStickyNode(node){return node instanceof StickyNode}function $createStickyNode({xOffset=650,yOffset=32,user="",color="yellow",state}){const node=new StickyNode(xOffset,yOffset,user,color,state);return(0,lexical__WEBPACK_IMPORTED_MODULE_3__.pT)(node)}try{$isStickyNode.displayName="$isStickyNode",$isStickyNode.__docgenInfo={description:"",displayName:"$isStickyNode",props:{constructor:{defaultValue:null,description:"",name:"constructor",required:!1,type:{name:"KlassConstructor<typeof LexicalNode>"}},__type:{defaultValue:null,description:"@internal",name:"__type",required:!0,type:{name:"string"}},__key:{defaultValue:null,description:"@internal",name:"__key",required:!0,type:{name:"string"}},__parent:{defaultValue:null,description:"@internal",name:"__parent",required:!0,type:{name:"string | null"}},__prev:{defaultValue:null,description:"@internal",name:"__prev",required:!0,type:{name:"string | null"}},__next:{defaultValue:null,description:"@internal",name:"__next",required:!0,type:{name:"string | null"}},afterCloneFrom:{defaultValue:null,description:"Perform any state updates on the clone of prevNode that are not already\nhandled by the constructor call in the static clone method. If you have\nstate to update in your clone that is not handled directly by the\nconstructor, it is advisable to override this method but it is required\nto include a call to `super.afterCloneFrom(prevNode)` in your\nimplementation. This is only intended to be called by\n{@link $cloneWithProperties } function or via a super call.\n@example ```ts\nclass ClassesTextNode extends TextNode {\n  // Not shown: static getType, static importJSON, exportJSON, createDOM, updateDOM\n  __classes = new Set<string>();\n  static clone(node: ClassesTextNode): ClassesTextNode {\n    // The inherited TextNode constructor is used here, so\n    // classes is not set by this method.\n    return new ClassesTextNode(node.__text, node.__key);\n  }\n  afterCloneFrom(node: this): void {\n    // This calls TextNode.afterCloneFrom and LexicalNode.afterCloneFrom\n    // for necessary state updates\n    super.afterCloneFrom(node);\n    this.__addClasses(node.__classes);\n  }\n  // This method is a private implementation detail, it is not\n  // suitable for the public API because it does not call getWritable\n  __addClasses(classNames: Iterable<string>): this {\n    for (const className of classNames) {\n      this.__classes.add(className);\n    }\n    return this;\n  }\n  addClass(...classNames: string[]): this {\n    return this.getWritable().__addClasses(classNames);\n  }\n  removeClass(...classNames: string[]): this {\n    const node = this.getWritable();\n    for (const className of classNames) {\n      this.__classes.delete(className);\n    }\n    return this;\n  }\n  getClasses(): Set<string> {\n    return this.getLatest().__classes;\n  }\n}\n```",name:"afterCloneFrom",required:!0,type:{name:"(prevNode: LexicalNode) => void"}},getType:{defaultValue:null,description:"Returns the string type of this node.",name:"getType",required:!0,type:{name:"() => string"}},isInline:{defaultValue:null,description:"",name:"isInline",required:!0,type:{name:"() => boolean"}},isAttached:{defaultValue:null,description:'Returns true if there is a path between this node and the RootNode, false otherwise.\nThis is a way of determining if the node is "attached" EditorState. Unattached nodes\nwon\'t be reconciled and will ultimatelt be cleaned up by the Lexical GC.',name:"isAttached",required:!0,type:{name:"() => boolean"}},isSelected:{defaultValue:null,description:"Returns true if this node is contained within the provided Selection., false otherwise.\nRelies on the algorithms implemented in {@link BaseSelection.getNodes} to determine\nwhat's included.\n@param selection - The selection that we want to determine if the node is in.",name:"isSelected",required:!0,type:{name:"(selection?: BaseSelection | null | undefined) => boolean"}},getKey:{defaultValue:null,description:"Returns this nodes key.",name:"getKey",required:!0,type:{name:"() => string"}},getIndexWithinParent:{defaultValue:null,description:"Returns the zero-based index of this node within the parent.",name:"getIndexWithinParent",required:!0,type:{name:"() => number"}},getParent:{defaultValue:null,description:"Returns the parent of this node, or null if none is found.",name:"getParent",required:!0,type:{name:"<T extends ElementNode>() => T | null"}},getParentOrThrow:{defaultValue:null,description:"Returns the parent of this node, or throws if none is found.",name:"getParentOrThrow",required:!0,type:{name:"<T extends ElementNode>() => T"}},getTopLevelElement:{defaultValue:null,description:'Returns the highest (in the EditorState tree)\nnon-root ancestor of this node, or null if none is found. See {@link lexical !$isRootOrShadowRoot}\nfor more information on which Elements comprise "roots".',name:"getTopLevelElement",required:!0,type:{name:"() => ElementNode | DecoratorNode<unknown> | null"}},getTopLevelElementOrThrow:{defaultValue:null,description:'Returns the highest (in the EditorState tree)\nnon-root ancestor of this node, or throws if none is found. See {@link lexical !$isRootOrShadowRoot}\nfor more information on which Elements comprise "roots".',name:"getTopLevelElementOrThrow",required:!0,type:{name:"() => ElementNode | DecoratorNode<unknown>"}},getParents:{defaultValue:null,description:"Returns a list of the every ancestor of this node,\nall the way up to the RootNode.",name:"getParents",required:!0,type:{name:"() => ElementNode[]"}},getParentKeys:{defaultValue:null,description:"Returns a list of the keys of every ancestor of this node,\nall the way up to the RootNode.",name:"getParentKeys",required:!0,type:{name:"() => string[]"}},getPreviousSibling:{defaultValue:null,description:'Returns the "previous" siblings - that is, the node that comes\nbefore this one in the same parent.',name:"getPreviousSibling",required:!0,type:{name:"<T extends LexicalNode>() => T | null"}},getPreviousSiblings:{defaultValue:null,description:'Returns the "previous" siblings - that is, the nodes that come between\nthis one and the first child of it\'s parent, inclusive.',name:"getPreviousSiblings",required:!0,type:{name:"<T extends LexicalNode>() => T[]"}},getNextSibling:{defaultValue:null,description:'Returns the "next" siblings - that is, the node that comes\nafter this one in the same parent',name:"getNextSibling",required:!0,type:{name:"<T extends LexicalNode>() => T | null"}},getNextSiblings:{defaultValue:null,description:'Returns all "next" siblings - that is, the nodes that come between this\none and the last child of it\'s parent, inclusive.',name:"getNextSiblings",required:!0,type:{name:"<T extends LexicalNode>() => T[]"}},getCommonAncestor:{defaultValue:null,description:"Returns the closest common ancestor of this node and the provided one or null\nif one cannot be found.\n@param node - the other node to find the common ancestor of.",name:"getCommonAncestor",required:!0,type:{name:"<T extends ElementNode = ElementNode>(node: LexicalNode) => T | null"}},is:{defaultValue:null,description:"Returns true if the provided node is the exact same one as this node, from Lexical's perspective.\nAlways use this instead of referential equality.\n@param object - the node to perform the equality comparison on.",name:"is",required:!0,type:{name:"(object: LexicalNode | null | undefined) => boolean"}},isBefore:{defaultValue:null,description:"Returns true if this node logical precedes the target node in the editor state.\n@param targetNode - the node we're testing to see if it's after this one.",name:"isBefore",required:!0,type:{name:"(targetNode: LexicalNode) => boolean"}},isParentOf:{defaultValue:null,description:"Returns true if this node is the parent of the target node, false otherwise.\n@param targetNode - the would-be child node.",name:"isParentOf",required:!0,type:{name:"(targetNode: LexicalNode) => boolean"}},getNodesBetween:{defaultValue:null,description:"Returns a list of nodes that are between this node and\nthe target node in the EditorState.\n@param targetNode - the node that marks the other end of the range of nodes to be returned.",name:"getNodesBetween",required:!0,type:{name:"(targetNode: LexicalNode) => LexicalNode[]"}},isDirty:{defaultValue:null,description:"Returns true if this node has been marked dirty during this update cycle.",name:"isDirty",required:!0,type:{name:"() => boolean"}},getLatest:{defaultValue:null,description:"Returns the latest version of the node from the active EditorState.\nThis is used to avoid getting values from stale node references.",name:"getLatest",required:!0,type:{name:"() => LexicalNode"}},getWritable:{defaultValue:null,description:"Returns a mutable version of the node using {@link $cloneWithProperties }\nif necessary. Will throw an error if called outside of a Lexical Editor\n{@link LexicalEditor.update} callback.",name:"getWritable",required:!0,type:{name:"() => LexicalNode"}},getTextContent:{defaultValue:null,description:"Returns the text content of the node. Override this for\ncustom nodes that should have a representation in plain text\nformat (for copy + paste, for example)",name:"getTextContent",required:!0,type:{name:"() => string"}},getTextContentSize:{defaultValue:null,description:"Returns the length of the string produced by calling getTextContent on this node.",name:"getTextContentSize",required:!0,type:{name:"() => number"}},createDOM:{defaultValue:null,description:"Called during the reconciliation process to determine which nodes\nto insert into the DOM for this Lexical Node.\n\nThis method must return exactly one HTMLElement. Nested elements are not supported.\n\nDo not attempt to update the Lexical EditorState during this phase of the update lifecyle.\n@param _config - allows access to things like the EditorTheme (to apply classes) during reconciliation.\n@param _editor - allows access to the editor for context during reconciliation.",name:"createDOM",required:!0,type:{name:"(_config: EditorConfig, _editor: LexicalEditor) => HTMLElement"}},updateDOM:{defaultValue:null,description:'Called when a node changes and should update the DOM\nin whatever way is necessary to make it align with any changes that might\nhave happened during the update.\n\nReturning "true" here will cause lexical to unmount and recreate the DOM node\n(by calling createDOM). You would need to do this if the element tag changes,\nfor instance.',name:"updateDOM",required:!0,type:{name:"(_prevNode: unknown, _dom: HTMLElement, _config: EditorConfig) => boolean"}},exportDOM:{defaultValue:null,description:"Controls how the this node is serialized to HTML. This is important for\ncopy and paste between Lexical and non-Lexical editors, or Lexical editors with different namespaces,\nin which case the primary transfer format is HTML. It's also important if you're serializing\nto HTML for any other reason via {@link @lexical/html!$generateHtmlFromNodes}. You could\nalso use this method to build your own HTML renderer.",name:"exportDOM",required:!0,type:{name:"(editor: LexicalEditor) => DOMExportOutput"}},exportJSON:{defaultValue:null,description:"Controls how the this node is serialized to JSON. This is important for\ncopy and paste between Lexical editors sharing the same namespace. It's also important\nif you're serializing to JSON for persistent storage somewhere.\nSee [Serialization & Deserialization](https://lexical.dev/docs/concepts/serialization#lexical---html).",name:"exportJSON",required:!0,type:{name:"() => SerializedLexicalNode"}},remove:{defaultValue:null,description:"Removes this LexicalNode from the EditorState. If the node isn't re-inserted\nsomewhere, the Lexical garbage collector will eventually clean it up.\n@param preserveEmptyParent - If falsy, the node's parent will be removed if\nit's empty after the removal operation. This is the default behavior, subject to\nother node heuristics such as {@link ElementNode#canBeEmpty }",name:"remove",required:!0,type:{name:"(preserveEmptyParent?: boolean | undefined) => void"}},replace:{defaultValue:null,description:"Replaces this LexicalNode with the provided node, optionally transferring the children\nof the replaced node to the replacing node.\n@param replaceWith - The node to replace this one with.\n@param includeChildren - Whether or not to transfer the children of this node to the replacing node.",name:"replace",required:!0,type:{name:"<N extends LexicalNode>(replaceWith: N, includeChildren?: boolean | undefined) => N"}},insertAfter:{defaultValue:null,description:"Inserts a node after this LexicalNode (as the next sibling).\n@param nodeToInsert - The node to insert after this one.\n@param restoreSelection - Whether or not to attempt to resolve the\nselection to the appropriate place after the operation is complete.",name:"insertAfter",required:!0,type:{name:"(nodeToInsert: LexicalNode, restoreSelection?: boolean | undefined) => LexicalNode"}},insertBefore:{defaultValue:null,description:"Inserts a node before this LexicalNode (as the previous sibling).\n@param nodeToInsert - The node to insert before this one.\n@param restoreSelection - Whether or not to attempt to resolve the\nselection to the appropriate place after the operation is complete.",name:"insertBefore",required:!0,type:{name:"(nodeToInsert: LexicalNode, restoreSelection?: boolean | undefined) => LexicalNode"}},isParentRequired:{defaultValue:null,description:"Whether or not this node has a required parent. Used during copy + paste operations\nto normalize nodes that would otherwise be orphaned. For example, ListItemNodes without\na ListNode parent or TextNodes with a ParagraphNode parent.",name:"isParentRequired",required:!0,type:{name:"() => boolean"}},createParentElementNode:{defaultValue:null,description:"The creation logic for any required parent. Should be implemented if {@link isParentRequired} returns true.",name:"createParentElementNode",required:!0,type:{name:"() => ElementNode"}},selectStart:{defaultValue:null,description:"",name:"selectStart",required:!0,type:{name:"() => RangeSelection"}},selectEnd:{defaultValue:null,description:"",name:"selectEnd",required:!0,type:{name:"() => RangeSelection"}},selectPrevious:{defaultValue:null,description:"Moves selection to the previous sibling of this node, at the specified offsets.\n@param anchorOffset - The anchor offset for selection.\n@param focusOffset -  The focus offset for selection",name:"selectPrevious",required:!0,type:{name:"(anchorOffset?: number | undefined, focusOffset?: number | undefined) => RangeSelection"}},selectNext:{defaultValue:null,description:"Moves selection to the next sibling of this node, at the specified offsets.\n@param anchorOffset - The anchor offset for selection.\n@param focusOffset -  The focus offset for selection",name:"selectNext",required:!0,type:{name:"(anchorOffset?: number | undefined, focusOffset?: number | undefined) => RangeSelection"}},markDirty:{defaultValue:null,description:"Marks a node dirty, triggering transforms and\nforcing it to be reconciled during the update cycle.",name:"markDirty",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/lexical/src/nodes/StickyNode.tsx#$isStickyNode"]={docgenInfo:$isStickyNode.__docgenInfo,name:"$isStickyNode",path:"packages/lexical/src/nodes/StickyNode.tsx#$isStickyNode"})}catch(__react_docgen_typescript_loader_error){}try{$createStickyNode.displayName="$createStickyNode",$createStickyNode.__docgenInfo={description:"",displayName:"$createStickyNode",props:{xOffset:{defaultValue:{value:"650"},description:"",name:"xOffset",required:!1,type:{name:"number"}},yOffset:{defaultValue:{value:"32"},description:"",name:"yOffset",required:!1,type:{name:"number"}},user:{defaultValue:{value:""},description:"",name:"user",required:!1,type:{name:"string"}},color:{defaultValue:{value:"yellow"},description:"",name:"color",required:!1,type:{name:"enum",value:[{value:'"pink"'},{value:'"yellow"'},{value:'"green"'},{value:'"blue"'}]}},state:{defaultValue:null,description:"",name:"state",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/lexical/src/nodes/StickyNode.tsx#$createStickyNode"]={docgenInfo:$createStickyNode.__docgenInfo,name:"$createStickyNode",path:"packages/lexical/src/nodes/StickyNode.tsx#$createStickyNode"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].use[2]!./packages/lexical/src/editor/Lexical.module.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,'/*\n * React Fabric\n * @version: 1.0.0\n *\n *\n * The MIT License (MIT)\n * Copyright (c) 2024 Adarsh Pastakia\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software\n * and associated documentation files (the "Software"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n * TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* stylelint-disable custom-property-pattern */\n\n@layer util {\n  .iYG3_VtX1WbAcVNUIk54,\n  .xPtygbMaAblweNNuBvSg {\n    width: 21cm;\n    margin: 0 auto;\n  }\n    .iYG3_VtX1WbAcVNUIk54 .editor-container.editor-container.editor-container {\n      /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */\n      font-family: "Sakkal Majalla";\n      font-size: 18px;\n      color: #0f172a;\n      background-color: #fff;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-heading-h1 {\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      padding: 0 4px;\n\n      font-size: 1.5em;\n      font-weight: 600;\n      line-height: 1.5;\n      text-transform: capitalize;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-heading-h2 {\n      margin-top: 1.5em;\n      margin-bottom: 1em;\n      padding: 0 4px;\n\n      font-size: 1.25em;\n      font-weight: 600;\n      line-height: 1.5;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-heading-h6 {\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n\n      font-size: 0.875em;\n      font-weight: 600;\n      line-height: 1.25;\n      color: #b45309;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-paragraph {\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      font-size: 1em;\n      line-height: 1.5;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-quote {\n      display: block;\n\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      padding-inline-start: 1em;\n\n      font-size: 1.125em;\n      line-height: 1.5;\n      color: #1e293b;\n\n      border-color: #64748b;\n      border-inline-start-width: 4px;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-code {\n      display: block;\n\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      padding: 1em;\n\n      font-size: 1.125em;\n      line-height: 1.5;\n      color: #1e293b;\n\n      background-color: #e2e8f0;\n      border-inline-start-width: 4px;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textUnderline {\n      text-decoration: underline;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textStrikethrough {\n      text-decoration: line-through;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textUnderlineStrikethrough {\n      text-decoration: underline line-through;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-page-break {\n      page-break-after: always;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-no-break {\n      page-break-inside: avoid;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textSmall {\n      font-size: 0.875em;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textBold {\n      font-weight: 600;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textItalic {\n      font-style: italic;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-textMuted {\n      color: #4b5563;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-list-ul {\n      padding-inline-start: 0.5em;\n      list-style: disc;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-list-ol {\n      padding-inline-start: 0.5em;\n      list-style: decimal;\n    }\n\n    .iYG3_VtX1WbAcVNUIk54 .editor-listItem {\n      margin-inline-start: 1em;\n      text-align: start;\n    }\n\n    @media print {\n      .iYG3_VtX1WbAcVNUIk54 html,\n      .iYG3_VtX1WbAcVNUIk54 body {\n        min-height: 100vh;\n        margin: 0;\n      }\n\n      .iYG3_VtX1WbAcVNUIk54 div,\n      .iYG3_VtX1WbAcVNUIk54 p,\n      .iYG3_VtX1WbAcVNUIk54 span,\n      .iYG3_VtX1WbAcVNUIk54 h1,\n      .iYG3_VtX1WbAcVNUIk54 h2,\n      .iYG3_VtX1WbAcVNUIk54 h3,\n      .iYG3_VtX1WbAcVNUIk54 h4,\n      .iYG3_VtX1WbAcVNUIk54 h5,\n      .iYG3_VtX1WbAcVNUIk54 h6 {\n        box-sizing: border-box;\n      }\n\n      .iYG3_VtX1WbAcVNUIk54 body.report-template {\n        min-height: 100vh;\n        background-size: 0;\n      }\n\n      .iYG3_VtX1WbAcVNUIk54 body::after {\n        content: "";\n\n        position: fixed;\n        z-index: 10;\n        inset: 0;\n\n        width: 100vw;\n        max-width: 21cm;\n        height: 100vh;\n        margin: 0 auto;\n\n        background-image: inherit;\n\n        -webkit-print-color-adjust: exact;\n        print-color-adjust: exact;\n      }\n\n      .iYG3_VtX1WbAcVNUIk54 .sticky__container,\n      .iYG3_VtX1WbAcVNUIk54 .editor-page-break > div {\n        display: none;\n      }\n\n      .iYG3_VtX1WbAcVNUIk54 .editor-container {\n        position: relative;\n      }\n\n      .iYG3_VtX1WbAcVNUIk54 .editor-editor {\n        box-sizing: border-box;\n        padding: 0 2cm;\n      }\n    }\n}\n',"",{version:3,sources:["webpack://./packages/lexical/src/editor/Lexical.module.css"],names:[],mappings:"AAAA;;;;;;;;;;;;;;;;;;;;;EAqBE;;AAEF,8CAA8C;;AAE9C;EACE;;IAEE,WAAW;IACX,cAAc;EAChB;IAGE;MACE,8EAA8E;MAC9E,6BAA6B;MAC7B,eAAe;MACf,cAAc;MACd,sBAAsB;IACxB;;IAEA;MACE,iBAAiB;MACjB,oBAAoB;MACpB,cAAc;;MAEd,gBAAgB;MAChB,gBAAgB;MAChB,gBAAgB;MAChB,0BAA0B;IAC5B;;IAEA;MACE,iBAAiB;MACjB,kBAAkB;MAClB,cAAc;;MAEd,iBAAiB;MACjB,gBAAgB;MAChB,gBAAgB;IAClB;;IAEA;MACE,iBAAiB;MACjB,oBAAoB;;MAEpB,kBAAkB;MAClB,gBAAgB;MAChB,iBAAiB;MACjB,cAAc;IAChB;;IAEA;MACE,iBAAiB;MACjB,oBAAoB;MACpB,cAAc;MACd,gBAAgB;IAClB;;IAEA;MACE,cAAc;;MAEd,iBAAiB;MACjB,oBAAoB;MACpB,yBAAyB;;MAEzB,kBAAkB;MAClB,gBAAgB;MAChB,cAAc;;MAEd,qBAAqB;MACrB,8BAA8B;IAChC;;IAEA;MACE,cAAc;;MAEd,iBAAiB;MACjB,oBAAoB;MACpB,YAAY;;MAEZ,kBAAkB;MAClB,gBAAgB;MAChB,cAAc;;MAEd,yBAAyB;MACzB,8BAA8B;IAChC;;IAEA;MACE,0BAA0B;IAC5B;;IAEA;MACE,6BAA6B;IAC/B;;IAEA;MACE,uCAAuC;IACzC;;IAEA;MACE,wBAAwB;IAC1B;;IAEA;MACE,wBAAwB;IAC1B;;IAEA;MACE,kBAAkB;IACpB;;IAEA;MACE,gBAAgB;IAClB;;IAEA;MACE,kBAAkB;IACpB;;IAEA;MACE,cAAc;IAChB;;IAEA;MACE,2BAA2B;MAC3B,gBAAgB;IAClB;;IAEA;MACE,2BAA2B;MAC3B,mBAAmB;IACrB;;IAEA;MACE,wBAAwB;MACxB,iBAAiB;IACnB;;IAEA;MACE;;QAEE,iBAAiB;QACjB,SAAS;MACX;;MAEA;;;;;;;;;QASE,sBAAsB;MACxB;;MAEA;QACE,iBAAiB;QACjB,kBAAkB;MACpB;;MAEA;QACE,WAAW;;QAEX,eAAe;QACf,WAAW;QACX,QAAQ;;QAER,YAAY;QACZ,eAAe;QACf,aAAa;QACb,cAAc;;QAEd,yBAAyB;;QAEzB,iCAAiC;QACjC,yBAAyB;MAC3B;;MAEA;;QAEE,aAAa;MACf;;MAEA;QACE,kBAAkB;MACpB;;MAEA;QACE,sBAAsB;QACtB,cAAc;MAChB;IACF;AAEJ",sourcesContent:['/*\n * React Fabric\n * @version: 1.0.0\n *\n *\n * The MIT License (MIT)\n * Copyright (c) 2024 Adarsh Pastakia\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software\n * and associated documentation files (the "Software"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n * TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* stylelint-disable custom-property-pattern */\n\n@layer util {\n  .lexicalEditor,\n  .lexicalToolbar {\n    width: 21cm;\n    margin: 0 auto;\n  }\n\n  .lexicalEditor :global {\n    .editor-container.editor-container.editor-container {\n      /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */\n      font-family: "Sakkal Majalla";\n      font-size: 18px;\n      color: #0f172a;\n      background-color: #fff;\n    }\n\n    .editor-heading-h1 {\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      padding: 0 4px;\n\n      font-size: 1.5em;\n      font-weight: 600;\n      line-height: 1.5;\n      text-transform: capitalize;\n    }\n\n    .editor-heading-h2 {\n      margin-top: 1.5em;\n      margin-bottom: 1em;\n      padding: 0 4px;\n\n      font-size: 1.25em;\n      font-weight: 600;\n      line-height: 1.5;\n    }\n\n    .editor-heading-h6 {\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n\n      font-size: 0.875em;\n      font-weight: 600;\n      line-height: 1.25;\n      color: #b45309;\n    }\n\n    .editor-paragraph {\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      font-size: 1em;\n      line-height: 1.5;\n    }\n\n    .editor-quote {\n      display: block;\n\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      padding-inline-start: 1em;\n\n      font-size: 1.125em;\n      line-height: 1.5;\n      color: #1e293b;\n\n      border-color: #64748b;\n      border-inline-start-width: 4px;\n    }\n\n    .editor-code {\n      display: block;\n\n      margin-top: 1.5em;\n      margin-bottom: 1.5em;\n      padding: 1em;\n\n      font-size: 1.125em;\n      line-height: 1.5;\n      color: #1e293b;\n\n      background-color: #e2e8f0;\n      border-inline-start-width: 4px;\n    }\n\n    .editor-textUnderline {\n      text-decoration: underline;\n    }\n\n    .editor-textStrikethrough {\n      text-decoration: line-through;\n    }\n\n    .editor-textUnderlineStrikethrough {\n      text-decoration: underline line-through;\n    }\n\n    .editor-page-break {\n      page-break-after: always;\n    }\n\n    .editor-no-break {\n      page-break-inside: avoid;\n    }\n\n    .editor-textSmall {\n      font-size: 0.875em;\n    }\n\n    .editor-textBold {\n      font-weight: 600;\n    }\n\n    .editor-textItalic {\n      font-style: italic;\n    }\n\n    .editor-textMuted {\n      color: #4b5563;\n    }\n\n    .editor-list-ul {\n      padding-inline-start: 0.5em;\n      list-style: disc;\n    }\n\n    .editor-list-ol {\n      padding-inline-start: 0.5em;\n      list-style: decimal;\n    }\n\n    .editor-listItem {\n      margin-inline-start: 1em;\n      text-align: start;\n    }\n\n    @media print {\n      html,\n      body {\n        min-height: 100vh;\n        margin: 0;\n      }\n\n      div,\n      p,\n      span,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        box-sizing: border-box;\n      }\n\n      body.report-template {\n        min-height: 100vh;\n        background-size: 0;\n      }\n\n      body::after {\n        content: "";\n\n        position: fixed;\n        z-index: 10;\n        inset: 0;\n\n        width: 100vw;\n        max-width: 21cm;\n        height: 100vh;\n        margin: 0 auto;\n\n        background-image: inherit;\n\n        -webkit-print-color-adjust: exact;\n        print-color-adjust: exact;\n      }\n\n      .sticky__container,\n      .editor-page-break > div {\n        display: none;\n      }\n\n      .editor-container {\n        position: relative;\n      }\n\n      .editor-editor {\n        box-sizing: border-box;\n        padding: 0 2cm;\n      }\n    }\n  }\n}\n'],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={lexicalEditor:"iYG3_VtX1WbAcVNUIk54",lexicalToolbar:"xPtygbMaAblweNNuBvSg"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);