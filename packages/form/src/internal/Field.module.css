/*
 * React Fabric
 * @version: 1.0.0
 *
 *
 * The MIT License (MIT)
 * Copyright (c) 2024 Adarsh Pastakia
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software
 * and associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
 * TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

@layer comp {
  .fieldWrapper {
    /* later */
  }
}

@layer var {
  .inputWrapper {
    &::after {
      inset-inline: 50%;
      transition: all 300ms;
      transition-delay: 100ms;
    }

    & .decorate:has([data-ref="button"]) {
      display: flex;
      align-self: stretch;
    }

    &:has(input[disabled], textarea[disabled]) {
      cursor: not-allowed;
      background-color: theme(colors.tint.50);

      & input,
      & textarea {
        cursor: not-allowed;
      }
    }

    &:focus-within,
    &:has([data-open="true"]) {
      z-index: 1;
      background-color: var(--fabric-input-focus);
      outline-color: var(--primary);

      &:not(:has([aria-readonly="true"]:not([hidden])))::after {
        inset-inline: 0;
      }
    }

    &:global(.fixed) {
      box-shadow: 0 0 2rem 0.5rem var(--fabric-shadow);
    }

    & input,
    & textarea {
      max-width: 100%;
    }

    & > input[type="number"] + .inputClear {
      margin-inline: -3rem 2rem;
    }

    & input::-ms-clear,
    & select::-ms-clear,
    & textarea::-ms-clear {
      display: none;
    }

    & input[type="search"]::-webkit-search-cancel-button {
      display: none;
    }

    & input[type="password"]:not(:placeholder-shown) {
      /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */
      font-family: caption;
      letter-spacing: 2px;
    }

    & input:-webkit-autofill {
      box-shadow: 0 0 0 999em var(--fabric-input) inset;

      -webkit-text-fill-color: theme(colors.accent.700);
    }

    & input:-webkit-autofill:focus {
      box-shadow: 0 0 0 999em var(--fabric-input-focus) inset;

      -webkit-text-fill-color: theme(colors.accent.700);
    }

    &.invalidWrapper {
      outline-color: theme(colors.danger.500);

      &::after {
        background-color: theme(colors.danger.500);
      }
    }
  }

  .fieldGroup {
    > * {
      line-height: 1;
    }

    > :not(:first-child) {
      &,
      & > div,
      & > [role="button"],
      & > [data-ref="button"] > [role="button"] {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
      }
    }

    > :not(:last-child) {
      &,
      & > div,
      & > [role="button"],
      & > [data-ref="button"] > [role="button"] {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
    }
  }
}
