"use strict";(self.webpackChunkreact_fabric=self.webpackChunkreact_fabric||[]).push([[1323],{"./packages/data/stories/TreeView.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_TreePanel:()=>_TreePanel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/core/dist/esm/index.js"),_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/utilities/dist/esm/index.js"),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/data/src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_src__WEBPACK_IMPORTED_MODULE_4__.d6,title:"@data/Tree Panel",parameters:{controls:{exclude:/^(children|as)/}},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-96 h-96 outline bg-base overflow-hidden",style:{display:"grid",gridTemplate:'"head" auto "content" 1fr / 1fr'},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})})]},treeItems=Object.entries((0,_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__.$z)(_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__.rX.list,"continent")).map((([key,children])=>({id:key,label:key,leaf:!1,children:Object.entries((0,_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__.$z)(children,"alpha")).map((([alp,list])=>({id:`${key}-${alp}`,label:alp,leaf:!1,data:{label:alp,type:"group"},children:list.map((ctr=>({id:ctr.iso2,icon:`flag ${ctr.iso2}`,label:`${ctr.name}`,badge:ctr.iso3,leaf:!0,data:ctr})))})))}))),_TreePanel={render:args=>{const initialTree=(0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)((()=>treeItems.map((({children,...item})=>item))),[]),loadTreeNodes=(0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((id=>new Promise((resolve=>{setTimeout((()=>{const node=treeItems.find((i=>i.id===id.split("-")[0]));return node&&id.includes("-")?resolve(node.children.find((c=>c.id===id))?.children):resolve(node?.children.map((({children,...item})=>item)))}),1e3)}))),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_4__.d6,{...args,items:initialTree,onLoad:loadTreeNodes,selected:"BH",defaultExpanded:["Asia","Asia-B"],renderer:data=>"group"==data.type?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center gap-1 overflow-hidden",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-initial truncate",children:data.label}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Mi,{groupHover:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.W1,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Dr,{label:"Show in map"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Dr,{label:"Major cities"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Dr,{label:"History..."})]})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted",children:"Something extra"})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center gap-1 overflow-hidden",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex-initial truncate",children:data.name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Mi,{groupHover:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.W1,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Dr,{label:"Show in map"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Dr,{label:"Major cities"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_fabric_core__WEBPACK_IMPORTED_MODULE_1__.Dr,{label:"History..."})]})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"text-sm text-muted",children:data.fullname})]})})},args:{selectable:!0,searchable:!0,filterPlaceholder:"Search country..."}},__namedExportsOrder=["_TreePanel"];_TreePanel.parameters={..._TreePanel.parameters,docs:{..._TreePanel.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const initialTree = useMemo(() => treeItems.map(({\n      children,\n      ...item\n    }) => item), []);\n    const loadTreeNodes = useCallback((id: string) => {\n      return new Promise<any>(resolve => {\n        setTimeout(() => {\n          const node = treeItems.find(i => i.id === id.split("-")[0]);\n          if (node && id.includes("-")) {\n            return resolve(node.children.find(c => c.id === id)?.children);\n          }\n          return resolve(node?.children.map(({\n            children,\n            ...item\n          }) => item));\n        }, 1000);\n      });\n    }, []);\n    return <TreePanel {...args} items={(initialTree as AnyObject)} onLoad={loadTreeNodes} selected="BH" defaultExpanded={["Asia", "Asia-B"]} renderer={data => {\n      if (data.type == "group") {\n        return <div>\n                <div className="flex items-center gap-1 overflow-hidden">\n                  <div className="flex-initial truncate">{data.label}</div>\n                  <DropdownTool groupHover>\n                    <Menu>\n                      <MenuItem label="Show in map" />\n                      <MenuItem label="Major cities" />\n                      <MenuItem label="History..." />\n                    </Menu>\n                  </DropdownTool>\n                </div>\n                <div className="text-sm text-muted">Something extra</div>\n              </div>;\n      }\n      return <div>\n              <div className="flex items-center gap-1 overflow-hidden">\n                <div className="flex-initial truncate">{data.name}</div>\n                <DropdownTool groupHover>\n                  <Menu>\n                    <MenuItem label="Show in map" />\n                    <MenuItem label="Major cities" />\n                    <MenuItem label="History..." />\n                  </Menu>\n                </DropdownTool>\n              </div>\n              <div className="text-sm text-muted">{data.fullname}</div>\n            </div>;\n    }} />;\n  },\n  args: {\n    selectable: true,\n    searchable: true,\n    filterPlaceholder: "Search country..."\n  }\n}',..._TreePanel.parameters?.docs?.source}}}}}]);