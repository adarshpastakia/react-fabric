"use strict";(self.webpackChunkreact_fabric=self.webpackChunkreact_fabric||[]).push([[4139],{"./packages/data/stories/json/JsonViewer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_JsonViewer:()=>_JsonViewer,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@faker-js/faker/dist/esm/index.mjs"),_react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/utilities/dist/esm/index.js"),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/data/src/index.ts");const meta={component:_src__WEBPACK_IMPORTED_MODULE_3__.p2,title:"@data/JsonViewer",parameters:{controls:{exclude:"json"}},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"max-w-2xl max-h-96 overflow-auto p-4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})})]},json={a:1,b:{},c:[],d:"test",e:{a:2,b:3,c:4},f:[1,2,3],f2:[{a:2,b:3},{a:2,b:3},{a:2,b:3}],g:void 0,h:33.45,i:"+99.18",j:198267345,boolean:{_label_:!0,_score_:75.69},date:"2020-03-04T12:48:00.000",time:"12:48:00.000",temp:{_label_:"Any label",_score_:45.69},lipsum:_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.Jb.lorem.paragraphs(4)},__WEBPACK_DEFAULT_EXPORT__=meta,_JsonViewer={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_3__.p2,{...args,json,filters:!0}),args:{copy:!0,labeler:path=>"a"===path?"Property A":path,formatter(path,value){if("j"===path)return _react_fabric_utilities__WEBPACK_IMPORTED_MODULE_2__.yL.number(value)}}},__namedExportsOrder=["_JsonViewer"];_JsonViewer.parameters={..._JsonViewer.parameters,docs:{..._JsonViewer.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return <JsonViewer {...args} json={json} filters />;\n  },\n  args: {\n    copy: true,\n    labeler(path) {\n      if (path === "a") return "Property A";\n      return path;\n    },\n    formatter(path, value) {\n      if (path === "j") return Format.number(value);\n    }\n  }\n}',..._JsonViewer.parameters?.docs?.source}}}}}]);