import{r as s,s as z,aM as A,j as o,m as W}from"./iframe-DcfUrZ2L.js";import{B as b}from"./Button-7pM1lgGA.js";import{T as F}from"./ToggleButtonGroup-CVNQsquy.js";import"./index-Bl9sirez.js";import{H as G}from"./HeadFoot-BdfsRs4J.js";import{V as K}from"./Viewport-CcMKmxve.js";import{u as X}from"./useDebounce-oR1dm03r.js";import{u as Y}from"./useResizeObserver-L_IFJsPD.js";import{S as $}from"./Section-Dbs60dt2.js";import{u as Q}from"./useIsDark-eso2Vda0.js";import{M as R}from"./editor-rR-s1SHq.js";import"./Tooltip-Dv6V4Byx.js";import"./cloneElement-B4wm8_Ia.js";import"./ErrorBoundary-CbzvQFF-.js";import"./createClass-D99gLwRj.js";import"./Global-CmkQSaMP.js";const Z="react-fabric",ee="0.0.0",te="React UI Framework",ne="Adarsh Pastakia <adarshpastakia@outlook.com>",se="MIT",oe=["packages/*"],re={makelink:"lerna run makelink",removelink:"lerna run removelink",bootstrap:"lerna bootstrap",prebuild:"jest --ci --runInBand --detectOpenHandles --json --outputFile=./.storybook/jest-test-results.json",storybook:"storybook dev -p 6003",build:"storybook build -o ./build","tailwind:build":"@tailwindcss/cli --cwd ./.storybook/styles -i ./styles.css -o ./build.css","tailwind:watch":"yarn tailwind:build --watch","lint:css":"stylelint packages/**/*.css","lint:ts":"eslint --no-error-on-unmatched-pattern .","check:ts":"lerna run build:dts --stream",lint:"npm-run-all lint:css lint:ts check:ts",pretest:"npm run lint",jest:"jest --ci --runInBand --detectOpenHandles --forceExit --coverage",test:"npm run jest",dist:"lerna run build",watch:"lerna run watch --parallel",release:'lerna version --conventional-commits --yes --preid=beta -m "chore(release): %v"'},ae={jackspeak:"2.1.1"},le={i18next:"~25.2.1","i18next-browser-languagedetector":"~8.0.0",react:"~19.0.0","react-dom":"~19.0.0","react-i18next":"~15.5.2","react-router":"~7.6.2","react-router-dom":"~7.6.2","resize-observer-polyfill":"~1.5.1"},ie={"@babel/core":"~7.24.0","@babel/plugin-transform-modules-commonjs":"~7.24.1","@babel/plugin-transform-runtime":"~7.24.0","@babel/preset-env":"~7.24.0","@babel/preset-react":"~7.23.3","@babel/preset-typescript":"~7.23.3","@chromatic-com/storybook":"~4.0.0","@eslint/compat":"~1.2.9","@eslint/eslintrc":"~3.3.1","@eslint/js":"~9.28.0","@faker-js/faker":"~8.4.1","@mdi/font":"~7.4.47","@mdi/js":"~7.4.47","@mdi/light-js":"~0.2.63","@modular-css/rollup":"~29.0.5","@rollup/plugin-babel":"~6.0.4","@rollup/plugin-commonjs":"~25.0.7","@rollup/plugin-json":"~6.1.0","@rollup/plugin-node-resolve":"~15.2.3","@rollup/plugin-typescript":"~11.1.6","@storybook/addon-a11y":"~9.0.5","@storybook/addon-docs":"~9.0.5","@storybook/addon-vitest":"~9.0.5","@storybook/react-vite":"~9.0.5","@tailwindcss/cli":"~4.0.14","@tailwindcss/vite":"~4.1.8","@testing-library/jest-dom":"~6.4.2","@testing-library/react":"~15.0.0","@testing-library/react-hooks":"~8.0.1","@types/color":"~3.0.6","@types/jest":"~29.5.12","@types/node":"~20.11.25","@types/react":"~19.0.0","@types/react-dom":"~19.0.0","@types/react-router":"~5.1.20","@types/react-router-dom":"~5.3.3","@typescript-eslint/eslint-plugin":"~7.1.1","@typescript-eslint/parser":"~7.1.1","@vitejs/plugin-react":"~4.4.1","@vitest/browser":"~3.2.2","@vitest/coverage-v8":"~3.2.2",autoprefixer:"~10.4.18",axios:"~1.7.7","babel-jest":"~29.7.0","babel-loader":"~9.1.3",eslint:"~9.25.0","eslint-config-prettier":"~9.1.0","eslint-config-standard-with-typescript":"~43.0.1","eslint-plugin-import":"~2.29.1","eslint-plugin-jsx-a11y":"~6.8.0","eslint-plugin-n":"~16.6.2","eslint-plugin-promise":"~6.1.1","eslint-plugin-react":"~7.34.0","eslint-plugin-react-hooks":"~5.2.0","eslint-plugin-react-refresh":"~0.4.19","eslint-plugin-storybook":"~9.0.5","git-conventional-commits":"~2.6.7",globals:"~16.0.0",jest:"~29.7.0","jest-css-modules":"~2.1.0","jest-environment-jsdom":"~29.7.0","jest-transform-css":"~6.0.1","jest-transform-stub":"~2.0.0",jsdom:"~24.0.0","jsdom-global":"~3.0.2",lerna:"~8.1.8","lerna-changelog":"~2.2.0","monaco-editor-webpack-plugin":"~7.1.0",msw:"~2.9.0","msw-storybook-addon":"~2.0.5","mutationobserver-shim":"~0.3.7","npm-run-all":"~4.1.5",playwright:"~1.52.0",postcss:"~8.4.35","postcss-extend":"~1.0.5","postcss-import":"~16.0.1","postcss-loader":"~8.1.1","postcss-nesting":"~12.1.0",prettier:"~3.2.5","prop-types":"~15.8.1",rollup:"~4.12.1","rollup-copy-transform-css":"~1.2.5","rollup-plugin-copy":"~3.5.0","rollup-plugin-exclude-dependencies-from-bundle":"~1.1.23","rollup-plugin-import-css":"~3.5.0","rollup-plugin-svg-import":"~3.0.0",storybook:"~9.0.5","style-inject":"~0.3.0",stylelint:"~16.2.1","stylelint-config-clean-order":"~6.0.0","stylelint-config-standard":"~36.0.0","stylelint-config-tailwindcss":"~0.0.7","stylelint-order":"~6.0.4","stylelint-selector-bem-pattern":"~4.0.0","ts-jest":"~29.1.2","ts-loader":"~9.5.1",typescript:"~5.8.3","typescript-eslint":"~8.30.1",vite:"~6.3.5",vitest:"~3.2.2"},ce=">=18.12.0",ue={node:">=18.12.0",npm:">=8.19.0"},de={workerDirectory:["static"]},pe={name:Z,version:ee,description:te,author:ne,license:se,private:!0,workspaces:oe,scripts:re,resolutions:ae,dependencies:le,devDependencies:ie,minNode:ce,engines:ue,msw:de},j=({ref:h,value:u,schema:d,handlebarSuggestions:k,required:x,readOnly:O,minimal:y,onChange:p,language:l="json"})=>{const[e,B]=s.useState(),[i,L]=s.useState(),w=Q(),[I,V]=s.useState("");s.useLayoutEffect(()=>{e&&V(w?"vs-dark":"light")},[w,e]);const _=s.useCallback(n=>e==null?void 0:e.layout(n),[e]),D=Y(_),m=s.useDeferredValue(u),H=s.useMemo(()=>z(m)?m:JSON.stringify(m,null,4),[m]),P=X(n=>{const t=e==null?void 0:e.getModel();if(t){const r=i==null?void 0:i.editor.getModelMarkers({owner:t.getLanguageId()});(r==null?void 0:r.filter(c=>c.severity>7).length)===0&&(p==null||p(n))}},[p,e],1e3);s.useImperativeHandle(h,()=>({getValue(){return e==null?void 0:e.getValue()},validate(){const n=e==null?void 0:e.getModel();if(n){const t=i==null?void 0:i.editor.getModelMarkers({owner:n.getLanguageId()});return(t==null?void 0:t.filter(r=>r.severity>8).length)===0}try{let t=e==null?void 0:e.getValue();return l==="json"&&(t=JSON.parse(t)),x?!A(t):!0}catch{return!1}}}),[x,l]);const C=s.useRef(null),q=s.useCallback(n=>{var t,r,c,M;if(l==="json"&&d){const[g,...a]=d;(r=(t=n.languages)==null?void 0:t.json)==null||r.jsonDefaults.setDiagnosticsOptions({validate:!0,allowComments:!1,schemas:[{fileMatch:["*"],...g},...a]})}l==="html"&&k&&((M=(c=C.current)==null?void 0:c.dispose)==null||M.call(c),C.current=n.languages.registerCompletionItemProvider("html",{triggerCharacters:["{{"],provideCompletionItems:function(g,a){if(!g.getValueInRange({startLineNumber:1,startColumn:1,endLineNumber:a.lineNumber,endColumn:a.column}).match(/\{\{(.*)([^}])?$/))return{suggestions:[]};const E=g.getWordUntilPosition(a),J={startLineNumber:a.lineNumber,endLineNumber:a.lineNumber,startColumn:E.startColumn,endColumn:E.endColumn};return{suggestions:k.map(v=>({label:v.text,kind:n.languages.CompletionItemKind.Text,documentation:v.description,insertText:v.text,range:J}))}}}))},[d,l]),U=s.useCallback((n,t)=>{t.languages.json.jsonDefaults.setDiagnosticsOptions({validate:!0,allowComments:!1,schemas:[]})},[]);return o.jsx($,{className:"relative",children:o.jsx("div",{ref:D,"data-ref":"codeEditor",className:W("fabric-codeEditor","absolute inset-0"),children:o.jsx(R,{editorDidMount:(n,t)=>[!!n&&B(n),!!t&&L(t)],editorWillMount:q,editorWillUnmount:U,value:H,language:l,onChange:P,theme:I,className:"fabric-editor",options:{readOnly:O,minimap:{enabled:!y},scrollBeyondLastLine:!1,folding:!y,lineNumbers:y?"off":void 0,wordWrap:"on",fontFamily:'Menlo, Monaco, "Courier New", monospace'}})})})};j.__docgenInfo={description:`CodeEditor component to render a code editor using Monaco Editor.
It supports JSON and HTML languages with optional schema validation and handlebar suggestions.
The editor can be configured to be read-only, minimal, and can handle changes in the code.
It provides a ref to access the editor's value and validation methods.

@param {EditorProps} props - The properties for the CodeEditor component.
@param {RefProp<MonacoEditorRef>} ref - The ref to access the editor methods.
@return {JSX.Element} The rendered CodeEditor component.

@example
\`\`\`jsx
<CodeEditor
  value={initialValue}
  schema={[{ uri: "http://example.com/schema.json", schema: {} }]}
  handlebarSuggestions={[{ text: "example", description: "An example suggestion" }]}
  required={true}
  readOnly={false}
  minimal={false}
  onChange={(value) => console.log("Code changed:", value)}
  language="json"
/>
\`\`\`

@see {@link https://adarshpastakia.github.io/react-fabric/?path=/story/monaco-playground--playground}
@see {@link https://microsoft.github.io/monaco-editor/}`,methods:[{name:"getValue",docblock:null,modifiers:[],params:[],returns:null},{name:"validate",docblock:null,modifiers:[],params:[],returns:null}],displayName:"CodeEditor",props:{value:{required:!1,tsType:{name:"union",raw:"string | AnyObject",elements:[{name:"string"},{name:"AnyObject"}]},description:""},required:{required:!1,tsType:{name:"boolean"},description:""},readOnly:{required:!1,tsType:{name:"boolean"},description:""},minimal:{required:!1,tsType:{name:"boolean"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},language:{defaultValue:{value:'"json"',computed:!1},required:!1}}};const{fn:me}=__STORYBOOK_MODULE_TEST__,Ie={component:j,title:"@monaco/_Playground_",parameters:{layout:"fullscreen",controls:{exclude:"children"}}},ge={json:pe,html:"<html></html>",css:"body { background-color: #fff; }",md:`# Markdown Example

This is an example of a markdown file.`},f={render:h=>{const[u,d]=s.useState("json");return o.jsx("div",{className:"min-h-[600px]",children:o.jsxs(K,{children:[o.jsx(G,{className:"py-1 px-2 bg-base",children:o.jsxs(F,{value:u,onChange:d,size:"sm",variant:"link",children:[o.jsx(b,{value:"json",children:"JSON"}),o.jsx(b,{value:"html",children:"HTML"}),o.jsx(b,{value:"css",children:"CSS"}),o.jsx(b,{value:"md",children:"Markdown"})]})}),o.jsx(j,{...h,language:u,value:ge[u],onChange:me()})]})})},args:{}};var N,T,S;f.parameters={...f.parameters,docs:{...(N=f.parameters)==null?void 0:N.docs,source:{originalSource:`{
  render: args => {
    const [lang, setLang] = useState<AnyObject>("json");
    return <div className="min-h-[600px]">
        <Viewport>
          <Header className="py-1 px-2 bg-base">
            <ToggleButtonGroup value={lang} onChange={setLang} size="sm" variant="link">
              <Button value="json">JSON</Button>
              <Button value="html">HTML</Button>
              <Button value="css">CSS</Button>
              <Button value="md">Markdown</Button>
            </ToggleButtonGroup>
          </Header>
          <CodeEditor {...args} language={lang} value={values[lang]} onChange={fn()} />
        </Viewport>
      </div>;
  },
  args: {}
}`,...(S=(T=f.parameters)==null?void 0:T.docs)==null?void 0:S.source}}};const Ve=["Playground"];export{f as Playground,Ve as __namedExportsOrder,Ie as default};
